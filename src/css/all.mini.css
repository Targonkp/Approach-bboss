/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%}body,hr{background:#fff}body{margin:0;min-width:320px;font-family:'IBM Plex Sans',sans-serif}details,main{display:block}a,h1{color:#fff}h1{font-weight:600;font-size:90px;line-height:117px;margin:20px 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;overflow:visible;width:592px;height:1px;opacity:.4;margin:40px 0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;text-decoration:none;font-weight:400;font-size:16px;line-height:21px}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}p,strong{font-size:18px;line-height:29px;color:#fff;max-width:700px;margin:20px 0}strong{font-size:20px;line-height:30px;display:inline-block}h2{font-size:44px;line-height:66px}.logo>a,h3{font-size:28px}h2,h3,strong{font-weight:600}h2,h3{color:#000}h3{line-height:42px}.wrap{max-width:1150px;width:100%;margin:0 auto}header{width:100%;height:132px;position:fixed;background:#000;display:block;z-index:100;padding:0 15px;-webkit-box-sizing:border-box;box-sizing:border-box}.header-content,.logo{display:-webkit-box;display:-ms-flexbox;display:flex;margin:60px 0 24px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.logo{margin:0 90px 0 0}.logo>img{margin:0 20px 0 0}.logo>a{line-height:36px;font-weight:700}nav>a{margin:0 0 0 28px}.active-url,nav>a:hover{padding-bottom:32px;border-bottom:4px solid #72665b}.active-url{border-bottom:4px solid}.section-1{padding:232px 15px 80px;background:#000;-webkit-box-sizing:border-box;box-sizing:border-box}.section-1-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.section-1-left{max-width:592px;width:100%;margin:0 80px 0 0}.section-1-left>img{margin:10px 0 20px}.section-1-right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.section-1-right>img{max-width:100%}.section-2{padding:80px 15px;background:#eceef2;-webkit-box-sizing:border-box;box-sizing:border-box}.section-2-right{margin-left:auto}.section-2-right>p{max-width:496px;color:#000}.section-2-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.section-3{padding:80px 15px;-webkit-box-sizing:border-box;box-sizing:border-box}.list-items>li,.section-3-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.section-3-left>p{color:#000;max-width:256px;width:100%;margin:0 81px 0 0}.list-items{list-style-type:none;margin:0;padding:0}.list-items>li{margin-bottom:24px}.list-element{margin:0 0 0 44px}.list-element>h3{margin:0}.list-element>p{color:#000;margin:16px 0 20px}.description-form,.section-3-bottom{-webkit-box-sizing:border-box;box-sizing:border-box}.section-3-bottom{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;width:100%;border:1px solid #00b4f0;border-radius:8px}.description-form{width:50%;background:#00b4f0;padding:48px 48px 71px;border-radius:8px 0 0 8px}.description-form>p:nth-of-type(1){font-weight:600;font-size:28px;line-height:42px;margin:24px 0}.arrow-img{margin:25px 0 0;text-align:right}.form,form>input{-webkit-box-sizing:border-box;box-sizing:border-box}.form{width:50%;background:#fff;padding:48px 47px 47px 48px;border-radius:0 8px 8px 0}.form>h3{margin:0 0 24px}form>input{border:1px solid rgba(0,0,0,.2);border-radius:6px;width:100%;height:50px;padding:13px 16px;font-size:16px;line-height:24px;color:#000;font-family:'Arial',sans-serif;margin:8px 0 24px;outline:0}form>input:focus{border:1px solid rgba(21,232,99,.2)}.label-email,form>label{font-family:'Arial',sans-serif;color:#000}form>label{font-weight:700;font-size:16px;line-height:24px}.label-email{font-size:14px;line-height:20px}.btn,.footer-meny,.footer-url{display:-webkit-box;display:-ms-flexbox;display:flex}.btn,.btn:hover{-webkit-transition:.4s;transition:.4s}.btn{background:#0d870d;border-radius:6px;height:50px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-family:'Arial',sans-serif;font-weight:700;font-size:16px;line-height:24px}.btn:hover{background:#145d04}footer{padding:80px 15px;background:#000;-webkit-box-sizing:border-box;box-sizing:border-box}.footer-meny,.footer-url{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.footer-url{margin:38px 0 0 -32px;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.footer-meny{padding:0}.footer-meny>li{margin-left:32px}.footer-meny a,.footer-meny a:hover{opacity:.5;-webkit-transition:.3s;transition:.3s}.footer-meny a:hover{opacity:1}.copyright{color:#fff;opacity:.5;font-size:16px;line-height:21px;margin-left:auto}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
